---
title: "R Coding Exercise"
---

Load the dslabs package. Install if you haven't. Then, inspect the gapminder dataset.

```{r}
#load dslabs package and tidyverse
library(dslabs)
library(tidyverse)
#look at help file for gapminder data
help(gapminder)
#get an overview of data structure
str(gapminder)
#get a summary of data 
summary(gapminder)
#determine the type of object gapminder is
class(gapminder)
```
Create a new object that contains only the African countries. Then, check the structure and summary of the new object.

```{r}
#create the object with only African countries
african_countries <- gapminder[gapminder$continent == "Africa", ]
#check the structure and summary
str(african_countries)
summary(african_countries)
```
Now, using the new African countries object, create two new objects. One should only contain "infant_mortality" and "life_expectancy" and the other should only hold "population" and "life_expectancy". 

```{r}
#create the object with only population and life expectancy data
african_countries_pop_life <- african_countries[, c("population", "life_expectancy")]
#create the object with only infant mortality and life expectancy data
african_countries_infant_life <- african_countries[, c("infant_mortality", "life_expectancy")]

```

Now that we've created two new objects that look at these specific variables, we can inspect them and get a better idea of the data.

```{r}
#look at the structure and summary of the first object
str(african_countries_pop_life)
summary(african_countries_pop_life)
#do the same for the second object
str(african_countries_infant_life)
summary(african_countries_infant_life)
```
Using the two new objects we can now create plots to characterize the relationship between life expectancy, population, and infant mortality. We'll create two plots; one that analyzes life expectancy vs infant mortality and one that analyzes life expectancy vs population size. The latter will have a log scale to make the data easier to visualize.
```{r}
#load ggplot2 to create better plots
library(ggplot2)

# Plot 1: Life expectancy vs. Infant mortality. lab() creates titles for the graph.
ggplot(african_countries_infant_life, aes(x = infant_mortality, y = life_expectancy)) +
  geom_point() +
  labs(title = "Life Expectancy vs. Infant Mortality")

# Plot 2: Life expectancy vs. Population size.
#scale_x_log10 puts the x axis (population) on a log scale.
ggplot(african_countries_pop_life, aes(x = population, y = life_expectancy)) +
  geom_point() +
  scale_x_log10() +
  labs(title = "Life Expectancy vs. Population Size (log scale)")

```
In Plot 1, we can see a negative correlation. As life expectancy decreases, the number of infants dying increases; this makes sense since more developed countries with better healthcare have higher life expectancies and lower infant mortality rates. In Plot 2, population size and life expectancy are positively correlated. This is logical, as longer lives allow for greater population growth and more infrequent deaths. The "streaks" in the data can be attributed to the presence of different years for individual countries in the dataset.

Knowing this, we can begin to narrow in on certain years and see which ones would be easiest to analyze given our dataset. We'll figure out which years have missing data for infant mortality.
```{r}
#find which years have missing data for infant mortality. 
#is.na() identifies which rows have na as their value
#select() shows us the years that are associated with these rows.
african_countries %>%
  filter(is.na(infant_mortality)) %>%
  select(year)

```
There is data missing up to 1981 and then again for 2016, so we'll select 2000. We'll create a new object now with only observations from 2000.

```{r}
#create an object with only data from 2000
african_countries_2000 <- african_countries[african_countries$year == 2000, ]

```

Now, we'll make the same plots as before using only the data from 2000.

```{r}
# Plot 3: Life expectancy vs. Infant mortality.
ggplot(african_countries_2000, aes(x = infant_mortality, y = life_expectancy)) +
  geom_point() +
  labs(title = "Life Expectancy vs. Infant Mortality")

# Plot 4: Life expectancy vs. Population size. 
ggplot(african_countries_2000, aes(x = population, y = life_expectancy)) +
  geom_point() +
  scale_x_log10() +
  labs(title = "Life Expectancy vs. Population Size (log scale)")
```
There still seems to be a negative correlation in plot 3, but plot 4 shows no noticeable correlation. We can now create some linear models with this data and draw more conclusions from the year 2000.

```{r}
#Table 1: fit life expectancy as a function of infant mortality. 
#lm() creates a linear model for the specified variables from a given dataset.
fit1 <- lm(life_expectancy ~ infant_mortality, african_countries_2000)
#print results to screen
summary(fit1)
#Table 2: fit life expectancy as a function of population size
fit2 <- lm(life_expectancy ~ population, african_countries_2000)
#print results to screen
summary(fit2)
```
Based off of the results from the fit, we can see that infant mortality is a statistically significant predictor of life expectancy for African countries in the year 2000. On the other hand, population does not seem to be a statistically significant predictor for life expectancy in 2000. These are logical conclusions given our prior knowledge of demography. 



This section contributed by Cory Cribb

Loading dslabs dataset "murders". Probably a more morbid data set but interesting to observe nonetheless.

```{r}
library(dslabs)
help(murders)
str(murders)
summary(murders)
```

Since I am originally from the Southern region of the US; lets explore murders in that region.

```{r}
South_Murders <- murders[murders$region== "South", ]
str(South_Murders)
summary(South_Murders)
```

From this data set, it would appear the researchers classified 17 states as being in the Southern region.
Let's explore if population size had any relationship to gun murders.

```{r}
Pop_and_murder <- South_Murders[, c("total", "population")]
str(Pop_and_murder)
summary(Pop_and_murder)
```

Create a scatter plot viewing total gun murders on the x-axis and state population on the y-axis to observe a trend.
Add a best fit line to the plot to see if there is a trend.

```{r}
attach(South_Murders)
plot(total,population, main= "Total gun murders vs. population size", xlab="Total gun murders", ylab="population")
abline(lm(population~total))
```

From a quick view of the plot, we see that there appears to be a positive correlation that there are more gun murders in states with higher populations. Let's run a linear model to see if the data gives a statistically significant observation.

```{r}
fit3 <- lm(population~total, South_Murders)
summary(fit3)
```

From the simple linear regression, we see that the slope is statistically significant.
The adjusted R-squared is 0.9152 which would indicated a Strong, Positive correlation in total gun murders per
Gross Population size in the Southern Region of the United States of America.

